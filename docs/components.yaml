components:
  schemas:
    cartExample:
      type: object
      example:
        id: 64596eff0411af1b1e13b8e7
        products:
          [
            {
              pid: 6451a619aaa91a4391bedfba,
              quantity: 78
            },
            {
              pid: "644f3f7e651b7007124da2b5",
              quantity: 1
            }
          ]
    Cart:
      type: object
      description: Carrito de compras. Tiene una propiedad id y un arreglo de productos.
      properties:
        id: 
          type: string
          example: 64596eff0411af1b1e13b8e7
        products:
          type: array
          description: Array de los productos guardados en el carrito
          items:
            type: object
            properties:
              pid: 
                type: string
                description: Referencia a un producto de la base de datos. El dato es de tipo ObjectId.
                example: 6451a619aaa91a4391bedfba
              quantity: 
                type: number
                description: Cantidad de ejemplares en el carrito.
                example: 5
    productExample:
      type: object
      example:
        id: 644afdde5138593c6da796fa
        title: Cortante Mujer maravilla
        description: Incluye dos unidades,cortante y marcador. Tamaño 8cm
        category: cortantes
        price: 345
        stock: 23
        thumbnail:
          [
            "imagen1",
            "imagen2"
          ]
        code: CB234
        owner: admin@app.com
        status: true
    Product:
      type: object
      properties:
        title:
          type: string
          description: Titulo del producto.
          example: Cortante Mujer maravilla
        description:
          type: string
          description: Descripciòn del producto.
          example: Incluye dos unidades,cortante y marcador. Tamaño 8cm
        category:
          type: string
          description: Categoria del producto.
          example: cortantes
        price:
          type: number
          description: Precio del producto.
          example: 630
        stock:
          type: number
          description: Cantidad de productos disponibles.
          example: 15
        thumbnail:
          type: array
          description: Array de imagenes del producto.
          example:
            [
              "imagen1",
              "imagen2"
            ]
        code: 
          type: string
          description: Código de identificación del producto.
          example: CB234
        owner:
          type: string
          description: Propiedad que almacena el email del usuario que ha creado el producto.
          example: admin@app.com
        status:
          type: boolean
          description: El estado indica si el producto esta o no disponible.
          example: true
    productPagination:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#components/schemas/Product'
        totalDocs:
          type: number
          example: 18
        limit: 
          type: number
          example: 4
        totalPages: 
          type: number
          example: 3
        page:
          type: number
          example: 2
        pagingCounter:
          type: number
          example: 11
        hasPrevPage:
          type: boolean
          example: true
        hasNextPage:
          type: boolean
          example: true
        prevPage:
          type: number
          example: 1
        nextPage:
          type: number
          example: 3
    Errors:
      examples:
        ZodErrors:
          value:
            name: ZodError
            issues:
              [
                {
                  code: invalid_type,
                  expected: string,
                  received: undefined,
                  path: ["email"],
                  message: email is required
                }
              ]
        MongoErrors:
          value:
            name: MongoServerError
            code: 11000
            keyValue: 
              {
                email: alguien@prueba.com
              }
        ClientErrors:
          value:
            name: Bad Request
            message: Todos los campos deben ser completados
    ServerErrors:
      type: object
      description: Errores producidos por el  servidor.
      properties:
        name:
          type: string
          description: Errores internos del servidor
        message:
          type: string
    Documents:
      type: object
      properties:
        profiles:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: foto1
              reference:
                type: string
                example: src/assets/profiles
        products:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: producto1
              reference:
                type: string
                example: src/assets/products
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: dni
              reference:
                type: string
                example: src/assets/documents
    Ticket:
      type: object
      properties:
        id:
          type: string
          example: 64a3a2460ef7dab677223abd
        code:
          type: string
          example: LENOHFuBP7
        purchase_datetime:
          type: string
          example: "2023-07-04T04:38:30.368+00:00"
        amount:
          type: number
          example: 1652
        purchaser:
          type: string
          example: alguien@prueba.com
        products:
          type: array
          items:
            $ref: '#components/schemas/productExample'
    Role:
      type: object
      properties:
        name:
          type: string
          example: client
        permissions:
          type: array
          items:
            type: string
            example: createProduct
    roleExample:
      type: object
      example:
        id: 646f7c414a28a546443ce94f
        name: client
        permissions:
          [
            "createProduct",
            "updateProduct"
          ]
  requestBodies:
    LogIn:
      type: object
      properties:
        email: 
          type: string
          description: Dirección de email del usuario.
        password:
          type: string
          description: Contraseña del usuario.
      example:
        email: "usuario@prueba.com"
        password: "12344559"
    SignUp:
      type: object
      properties:
        firstName:
          type: string
          description: Nombre del usuario.
        lastName:
          type: string
          description: Apellido del usuario.
        email:
          type: string
          description: Dirección de email del usuario.
        password: 
          type: string
          description: Contraseña del usuario.
        age:
          type: number
          description: Edad del usuario.
      example:
        firstName: Pablo
        lastName: Fulano
        email: pablo@fulano.com
        password: pabloelfulano
        age: 35
    updateUser:
      example:
        firstname: Laura
        password: laura22_4
  securitySchemes:
    BearerToken:
      type: apiKey
      in: header
      name: Authorization
security:
  - BearerToken: []