paths:
  /api/sessions/login:
    post:
      summary: Iniciar sesión en la app.
      description: La ruta permite que un usuario inicie sesión con a través de sus datos.
      tags:
        - Session
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/LogIn'
      responses:
        '200':
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  message:
                    type: string
                    example: 'Login success'
                  data: 
                    type: string
                    description: Token de acceso de tipo JWT.
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                  message:
                    type: string
                    example: Login failed, invalid password!
        '401':
          description: Error de autorización
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                  message:
                    type: string
        '500':
          description: Error interno en el servidor.
  /api/sessions/current:
    get:
      summary: Obtiene información de la sessión que esta activa
      description: El endpoint devuelve información del usuario que ha iniciado sesion en la aplicacion.
      tags:
        - Session
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  data: 
                    $ref: '#components/schemas/User'
          example:
            $ref: '#components/schemas/userExample'
        '401':
          description: Error de autorización
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                  message:
                    type: string
        '500':
          description: Error interno en el servidor.
  /api/sessions/signup:
    post:
      summary: Registrarse en la app.
      description: La ruta permite que un usuario pueda crear un registro con sus datos en la aplicación.
      tags:
        - Session
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#components/requestBodies/SignUp'
      responses:
        '201':
          description: Usuario creado con exito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'success'
                  data: 
                    example:
                      firstName: Pablo
                      lastName: Fulano
                      age: 35
                      email: pablo@fulano.com
                      cart: []
                      role: 647fd20fb16b39892de4c6aa
                      isAdmin: false
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                  message:
                    type: string
                    example: 
                      message: "Error name: ZodError"
        '401':
          description: Error de autorización
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: error
                  message:
                    type: string
        '500':
          description: Error interno en el servidor.
components:
  schemas:
    User:
     type: object
     properties:
       id:
         type: string
         description: Id autogenerado de mongo pero guardado en la entidad como string.
       firstName: 
         type: string
         description: Nombre del usuario.
       lastName:
         type: string
         description: Apellido del usuario.
       email:
         type: string
         description: dirección de correo electrónico del usuario. Este campo es único en la base de datos.
       age: 
         type: number
         description: Edad del usuario.
       role:
         type: ObjectId
         description: Role del usuario para interactuar con la app. Por defecto el rol generado es user y solo puede ser modificado por un administrador o un usurio con los permisos necesarios.
       cart:
         type: ObjectId
         description: Referencia a/los carritos de compra del usuario.
       documents:
         $ref: '#components/schemas/Documents'
       isAdmin:
         type: boolean
         description: booleano para indicar si el usuario es admin. Por defecto false.
       lastConnection:
         type: string
         description: Muestra la ultima conexion el usuario.s
    userExample:
      example:
        id: "649aefb0b67e84a0e47317c3"
        firstName: Antonella
        lastName: Perez
        email: antonellaP@prueba.com
        age: 23
        role: ObjectId("647fd20fb16b39892de4c6aa")
        cart: ObjectId("64596eff0411af1b1e13b8e7")
        documents:
          {
            profiles:
            [
              {
                name: foto1,
                reference: src/public/assets/profiles
              }
            ],
            products:
            [
              {
                name: product1,
                reference: src/public/assets/products
              }
            ],
            documents:
            [
              {
                name: doc_1,
                reference: src/public/assets/documents
              }
            ]
          }
        isAdmin: false
        lastConnection: 12/08/2023
  requestBodies:
    LogIn:
      type: object
      properties:
        email: 
          type: string
          description: Dirección de email del usuario.
        password:
          type: string
          description: Contraseña del usuario.
      example:
        email: "usuario@prueba.com"
        password: "12344559"
    SignUp:
      type: object
      properties:
        firstName:
          type: string
          description: Nombre del usuario.
        lastName:
          type: string
          description: Apellido del usuario.
        email:
          type: string
          description: Dirección de email del usuario.
        password: 
          type: string
          description: Contraseña del usuario.
        age:
          type: number
          description: Edad del usuario.
      example:
        firstName: Pablo
        lastName: Fulano
        email: pablo@fulano.com
        password: pabloelfulano
        age: 35
  securitySchemes:
    BearerToken:
      type: apiKey
      in: header
      name: Authorization
security:
  - BearerToken: []